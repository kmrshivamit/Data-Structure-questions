139. Word Break
Medium

5116

253

Add to List

Share
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".
Example 2:

Input: s = "applepenapple", wordDict = ["apple", "pen"]
Output: true
Explanation: Return true because "applepenapple" can be segmented as "apple pen apple".
             Note that you are allowed to reuse a dictionary word.
Example 3:

Input: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
Output: false


code

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
    HashMap<String , Boolean> hm=new HashMap<>();
       return wordBreak(s,wordDict,hm);
    }
    
    boolean wordBreak(String s,List <String> wordDict, HashMap<String, Boolean> hm)
    {
        if(wordDict.contains(s))
            return true;
        if(hm.get(s)!=null)
            return hm.get(s);
        
        for(int i=1;i<s.length();i++)
        {
            if(wordDict.contains(s.substring(0,i))){
            if(wordBreak(s.substring(i,s.length()),wordDict,hm)==true)    
            {
              hm.put(s,true);
                return true;
            }
            }
        }
        hm.put(s,false);
        return false;
    }
}
